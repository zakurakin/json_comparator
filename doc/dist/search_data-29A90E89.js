searchData={"items":[{"type":"module","title":"JsonComparator","doc":"Provides functionality for comparing JSON structures with configurable comparison options.","ref":"JsonComparator.html"},{"type":"function","title":"JsonComparator.compare/3","doc":"Compares two JSON structures for equality with configurable options.\n\nThis function performs a deep comparison of two JSON structures, supporting various data types\nincluding maps, lists, DateTime objects, and structs. It provides configurable behavior for\nlist comparison and DateTime precision.","ref":"JsonComparator.html#compare/3"},{"type":"function","title":"Parameters - JsonComparator.compare/3","doc":"* `json1` - First JSON structure to compare\n  * `json2` - Second JSON structure to compare\n  * `opts` - Optional keyword list of comparison options:\n    * `:strict_list_order` - When `true`, lists must have identical order to be considered equal.\n      Defaults to `false`\n    * `:truncate_datetime_microseconds` - When `true`, DateTime comparisons ignore microseconds.\n      Defaults to `true`\n    * `:error_message` - Custom error message template to use when differences are found.\n      The string `%{path}` will be replaced with the path where the difference was found.\n      Defaults to \"Submitted JSONs do not match: %{path}\"","ref":"JsonComparator.html#compare/3-parameters"},{"type":"function","title":"Returns - JsonComparator.compare/3","doc":"* `:ok` - When the structures are equal according to the comparison rules\n  * `{:error, message}` - When differences are found, where message is a string indicating\n    the path where the first difference was encountered","ref":"JsonComparator.html#compare/3-returns"},{"type":"function","title":"Examples - JsonComparator.compare/3","doc":"iex> JsonComparator.compare(%{a: 1}, %{a: 1})\n    :ok\n\n    iex> JsonComparator.compare(%{a: [1, 2]}, %{a: [2, 1]}, strict_list_order: true)\n    {:error, \"Submitted JSONs do not match: a[0]\"}\n\n    iex> JsonComparator.compare(%{a: 1}, %{a: 2}, error_message: \"Values differ at: %{path}\")\n    {:error, \"Values differ at: a\"}\n\n    iex> dt1 = DateTime.from_iso8601(\"2024-01-01T00:00:00.123456Z\")\n    iex> dt2 = DateTime.from_iso8601(\"2024-01-01T00:00:00.789012Z\")\n    iex> JsonComparator.compare(%{time: dt1}, %{time: dt2}, truncate_datetime_microseconds: true)\n    :ok","ref":"JsonComparator.html#compare/3-examples"}],"proglang":"elixir","content_type":"text/markdown","producer":{"name":"ex_doc","version":"0.38.2"}}